-- MySQL Script generated by MySQL Workbench
-- Fri Apr 11 08:19:26 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';



-- -----------------------------------------------------
-- Schema Proyecto
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Proyecto` ;

-- -----------------------------------------------------
-- Schema Proyecto
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Proyecto` DEFAULT CHARACTER SET utf8 ;
USE `Proyecto` ;

DROP USER IF EXISTS usuarios2;
CREATE USER "usuarios2"@"%" IDENTIFIED BY "12345";
GRANT SELECT, UPDATE, INSERT, DELETE ON proyecto.* TO usuarios2;

-- -----------------------------------------------------
-- Table `Proyecto`.`Usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto`.`Usuarios` ;

CREATE TABLE IF NOT EXISTS `Proyecto`.`Usuarios` (
  `idUsuarios` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(120) NOT NULL,
  `tipo_usuario` ENUM("usuario", "autoridad") NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `CURP` VARCHAR(18) NOT NULL,
  PRIMARY KEY (`idUsuarios`),
  UNIQUE INDEX `Email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `CURP_UNIQUE` (`CURP` ASC) VISIBLE)
ENGINE = InnoDB;

ALTER TABLE Usuarios AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `Proyecto`.`Autoridades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto`.`Autoridades` ;

CREATE TABLE IF NOT EXISTS `Proyecto`.`Autoridades` (
  `idAutoridades` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `idUsuarios` INT UNSIGNED NOT NULL,
  `Autoridad` VARCHAR(120) NOT NULL,
  `Servicio` VARCHAR(45) NOT NULL,
  `Telefono` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idAutoridades`),
  INDEX `fk_Autoridades_Usuarios_idx` (`idUsuarios` ASC) VISIBLE,
  CONSTRAINT `fk_Autoridades_Usuarios`
    FOREIGN KEY (`idUsuarios`)
    REFERENCES `Proyecto`.`Usuarios` (`idUsuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
ALTER TABLE Autoridades AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `Proyecto`.`Ubicacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto`.`Ubicacion` ;

CREATE TABLE IF NOT EXISTS `Proyecto`.`Ubicacion` (
  `idUbicacion` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `calle` VARCHAR(80) NOT NULL,
  `Num` VARCHAR(10) NOT NULL,
  `colonia` VARCHAR(45) NOT NULL,
  `codigoPostal` VARCHAR(8) NOT NULL,
  `Estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUbicacion`))
ENGINE = InnoDB;
ALTER TABLE Ubicacion AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `Proyecto`.`Reportes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto`.`Reportes` ;

CREATE TABLE IF NOT EXISTS `Proyecto`.`Reportes` (
  `idReportes` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Descripcion` VARCHAR(200) NOT NULL,
  `Estado` ENUM("Pendiente", "Revision", 'Proceso', "Terminado") NOT NULL,
  `Fecha_Reporte` DATE NOT NULL,
  `Foto` BLOB NULL,
  `Tipo_de_problema` VARCHAR(50) NOT NULL,
  `idUbicacion` INT UNSIGNED NOT NULL,
  `idUsuarios` INT UNSIGNED NOT NULL,
  `idAutoridades` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idReportes`),
  INDEX `fk_Reportes_Ubicacion1_idx` (`idUbicacion` ASC) VISIBLE,
  INDEX `fk_Reportes_Usuarios1_idx` (`idUsuarios` ASC) VISIBLE,
  INDEX `fk_Reportes_Autoridades1_idx` (`idAutoridades` ASC) VISIBLE,
  CONSTRAINT `fk_Reportes_Ubicacion1`
    FOREIGN KEY (`idUbicacion`)
    REFERENCES `Proyecto`.`Ubicacion` (`idUbicacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reportes_Usuarios1`
    FOREIGN KEY (`idUsuarios`)
    REFERENCES `Proyecto`.`Usuarios` (`idUsuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reportes_Autoridades1`
    FOREIGN KEY (`idAutoridades`)
    REFERENCES `Proyecto`.`Autoridades` (`idAutoridades`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

ALTER TABLE Reportes AUTO_INCREMENT = 1000;

USE `Proyecto` ;

-- -----------------------------------------------------
-- Placeholder table for view `Proyecto`.`vw_CatalogoAutoridades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Proyecto`.`vw_CatalogoAutoridades` (`idAutoridades` INT, `Autoridad` INT, `Servicio` INT, `Telefono` INT, `Encargado` INT);

-- -----------------------------------------------------
-- Placeholder table for view `Proyecto`.`vw_ReportesCompletos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Proyecto`.`vw_ReportesCompletos` (`idReportes` INT, `Descripcion` INT, `Estado` INT, `Fecha_Reporte` INT, `Tipo_de_problema` INT, `calle` INT, `Num` INT);

-- -----------------------------------------------------
-- View `Proyecto`.`vw_CatalogoAutoridades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto`.`vw_CatalogoAutoridades`;
DROP VIEW IF EXISTS `Proyecto`.`vw_CatalogoAutoridades` ;
USE `Proyecto`;
CREATE  OR REPLACE VIEW vw_CatalogoAutoridades AS
SELECT au.idAutoridades, au.Autoridad, au.Servicio, au.Telefono, u.Nombre AS Encargado
FROM Autoridades AS au
JOIN Usuarios AS u ON u.idUsuarios = au.idUsuarios;

-- -----------------------------------------------------
-- View `Proyecto`.`vw_ReportesCompletos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto`.`vw_ReportesCompletos`;
DROP VIEW IF EXISTS `Proyecto`.`vw_ReportesCompletos` ;
USE `Proyecto`;
CREATE  OR REPLACE VIEW vw_ReportesCompletos AS
SELECT r.idReportes, r.Descripcion, r.Estado, r.Fecha_Reporte, 
       r.Tipo_de_problema, 
       ub.calle, ub.Num
FROM Reportes r
JOIN Usuarios u ON r.idUsuarios = u.idUsuarios
JOIN Ubicacion ub ON r.idUbicacion = ub.idUbicacion;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
